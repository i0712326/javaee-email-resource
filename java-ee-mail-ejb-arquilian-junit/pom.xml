<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>pro.tikkwiki.blog.mail.web</groupId>
  <artifactId>java-ee-mail-ejb-arquilian-junit</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>java-ee-mail-ejb-arquilian-junit Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>

	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<!-- JBoss dependency versions -->
	<version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>

	<!-- Define the version of the JBoss BOMs we want to import to specify tested 
		stacks. -->
	<version.jboss.bom>10.1.0.Final</version.jboss.bom>

	<!-- other plug-in versions -->
	<version.war.plugin>3.0.0</version.war.plugin>

	<!-- maven-compiler-plugin -->
	<maven.compiler.target>1.8</maven.compiler.target>
	<maven.compiler.source>1.8</maven.compiler.source>
	
  </properties>

  <dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.wildfly.bom</groupId>
			<artifactId>wildfly-javaee7-with-tools</artifactId>
			<version>${version.jboss.bom}</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>
	</dependencies>
  </dependencyManagement>

  <dependencies>

	<!-- First declare the APIs we depend on and need for compilation. All of 
		them are provided by WildFly -->

	<!-- Import the CDI API, we use provided scope as the API is included in 
		WildFly -->
	<dependency>
		<groupId>javax.enterprise</groupId>
		<artifactId>cdi-api</artifactId>
		<scope>provided</scope>
	</dependency>

	<!-- Import the Common Annotations API (JSR-250), we use provided scope 
		as the API is included in WildFly -->
	<dependency>
		<groupId>org.jboss.spec.javax.annotation</groupId>
		<artifactId>jboss-annotations-api_1.2_spec</artifactId>
		<scope>provided</scope>
	</dependency>

	<!-- Import the JPA API, we use provided scope as the API is included in 
		WildFly -->
	<!-- <dependency>
		<groupId>org.hibernate.javax.persistence</groupId>
		<artifactId>hibernate-jpa-2.1-api</artifactId>
		<scope>provided</scope>
	</dependency> -->

	<!-- Import the EJB API, we use provided scope as the API is included in 
		WildFly -->
	<dependency>
		<groupId>org.jboss.spec.javax.ejb</groupId>
		<artifactId>jboss-ejb-api_3.2_spec</artifactId>
		<scope>provided</scope>
	</dependency>

	<!-- Import the JSF API, we use provided scope as the API is included in 
		WildFly -->
	<!-- <dependency>
		<groupId>org.jboss.spec.javax.faces</groupId>
		<artifactId>jboss-jsf-api_2.2_spec</artifactId>
		<scope>provided</scope>
	</dependency> -->
	
	<!-- Needed for running tests (you may also use TestNG) -->
	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<scope>test</scope>
	</dependency>

	<!-- Optional, but highly recommended -->
	<!-- Arquillian allows you to test enterprise code such as EJBs and Transactional(JTA) 
		JPA from JUnit/TestNG -->
	<dependency>
		<groupId>org.jboss.arquillian.junit</groupId>
		<artifactId>arquillian-junit-container</artifactId>
		<scope>test</scope>
	</dependency>

	<dependency>
		<groupId>org.jboss.arquillian.protocol</groupId>
		<artifactId>arquillian-protocol-servlet</artifactId>
		<scope>test</scope>
	</dependency>
	
	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>4.11</version>
		<scope>test</scope>
	</dependency>
	
  </dependencies>
  
  <build>
    <finalName>java-ee-mail-ejb-arquilian-junit</finalName>
    <plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>${version.war.plugin}</version>
				<configuration>
					<!-- Java EE doesn't require web.xml, Maven needs to catch up! -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<!-- The WildFly plug-in deploys the WAR to a local WildFly container -->
			<!-- To use, run: mvn package wildfly:deploy -->
			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
				<version>${version.wildfly.maven.plugin}</version>
			</plugin>
		</plugins>
  </build>
  <profiles>
		<profile>
			<!-- An optional Arquillian testing profile that executes tests in your 
				WildFly instance -->
			<!-- This profile will start a new WildFly instance, and execute the test, 
				shutting it down when done -->
			<!-- Run with: mvn clean test -Parq-wildfly-managed -->
			<id>arq-wildfly-managed</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			
			<dependencies>
				
				<dependency>
					<groupId>org.wildfly.arquillian</groupId>
					<artifactId>wildfly-arquillian-container-managed</artifactId>
					<version>2.0.1.Final</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<!-- An optional Arquillian testing profile that executes tests in a remote 
				WildFly instance -->
			<!-- Run with: mvn clean test -Parq-wildfly-remote -->
			<id>arq-wildfly-remote</id>
			<dependencies>
				<dependency>
					<groupId>org.wildfly.arquillian</groupId>
					<artifactId>wildfly-arquillian-container-remote</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>

	</profiles>
</project>
